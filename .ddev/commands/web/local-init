#!/usr/bin/env bash

## Description: Initialize a local WP database using standard defaults.
## Usage: local-init [flags]
## Example: "ddev local-init" or "ddev local-init -i"
## Flags: [{"Shorthand":"i","Usage":"Expanded dialog to set password, set up options, activate plugins, etc."}]

is_multisite() {
  grep -q 'WP_ALLOW_MULTISITE.*true' wp-config.php
}

while getopts "i" option; do
  case "${option}" in

  i)
    INITIAL_RUN=1
    ;;
  esac
done

USER_PASS=test
if [ -n "${INITIAL_RUN}" ]; then
  read -p "sit-admin password: [test] " USER_PASS
  USER_PASS=${USER_PASS:-test}
fi
composer update situation/scripts situation/backstage -o >/dev/null 2>&1
echo "Installing WP Core..."
if is_multisite; then
  wp core multisite-install --skip-config --url=${DDEV_PRIMARY_URL} --title="${SITE_TITLE}" --admin_user="sit-admin" --admin_email="developers@situationinteractive.com" >/dev/null 2>&1
  echo "const DOMAIN_CURRENT_SITE = '${DDEV_SITENAME}.${DDEV_TLD}';" >>./local-config.php
  [ -f wp-content/sunrise.php ] && echo "const SUNRISE = true;" >>./local-config.php
  [[ "${DDEV_SITENAME}" = "admin.baa" ]] && echo "const COOKIE_DOMAIN = 'baa.test';" >>./local-config.php
  cat >.htaccess <<-EOM
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ \$1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) wp/\$2 [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ wp/\$2 [L]
RewriteRule . index.php [L]
EOM
  wp rewrite structure '/%postname%/' --url=${DDEV_PRIMARY_URL}
  wp rewrite flush --url=${DDEV_PRIMARY_URL}
else
  wp core install --url=${DDEV_PRIMARY_URL} --title="${SITE_TITLE}" --admin_user="sit-admin" --admin_email="developers@situationinteractive.com" >/dev/null 2>&1
  wp rewrite structure '/%postname%/' --url=${DDEV_PRIMARY_URL}
  wp rewrite flush --hard --url=${DDEV_PRIMARY_URL}
fi
wp user update sit-admin --user_pass=${USER_PASS}
echo "Set default password: ${USER_PASS}"
if [ -n "${INITIAL_RUN}" ]; then
  wp option update timezone_string "America/New_York"
  wp option delete blogdescription comments_notify default_comment_status default_ping_status default_pingback_flag comment_moderation moderation_notify comment_registration show_avatars close_comments_for_old_posts page_comments
  wp post delete 1 --force
  wp post update 2 --post_content="" --post_title="Home" --post_name="home"
  wp option update show_on_front "page"
  wp option update page_on_front 2
fi
if is_multisite; then
  wp plugin activate backstage advanced-custom-fields-pro wp-sync-db wp-sync-db-cli wp-sync-db-media-files --url=${DDEV_PRIMARY_URL} --network
else
  wp plugin activate backstage advanced-custom-fields-pro wp-sync-db wp-sync-db-cli wp-sync-db-media-files --url=${DDEV_PRIMARY_URL}
fi

if [ -n "${INITIAL_RUN}" ]; then
  echo "Getting plugin list..."
  pluginList=$(wp plugin list --fields=name,title --format=csv --status=inactive --url=${DDEV_PRIMARY_URL})
  options=()
  count=0
  while IFS=',' read -a row; do
    if [[ $count -gt 0 ]]; then
      name="${row[0]}"
      title=$(sed -e 's/"//g' <<<"${row[1]}")
      options+=("${name}" "${title}" "OFF")
    fi
    ((count++))
  done <<<"${pluginList}"

  choices=$(dialog --erase-on-exit --title "Plugin Activation" --checklist "Activate plugins (Enter or Esc to continue):" 23 70 15 "${options[@]}" 3>&1 1>&2 2>&3)
  if [ ! -z "${choices}" ]; then
    choices=$(sed -e 's/"//g' <<<"${choices}")
    wp plugin activate ${choices} --url=${DDEV_PRIMARY_URL}
  fi
  echo "Login at ${DDEV_PRIMARY_URL}/wp/wp-admin/ with sit-admin / ${USER_PASS}"
fi
