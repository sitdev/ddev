#!/bin/bash

## Description: Run a previously saved WP Sync DB migration profile.
## Usage: run-migration [args]
## Example: "ddev run-migration pull-staging"

if [ -z $1 ]; then
  wp wpsdb migrate --help --url=${DDEV_PRIMARY_URL}
  ls .conf/migrations | sed -e 's/\.yaml//'
  exit
fi

FILE=".conf/migrations/${1}.yaml"

if [ -f ${FILE} ]; then
  echo "Importing migration from ${FILE}"
  direction=$(yq '.profiles[0].action' "${FILE}")
  if [[ "${direction}" = "push" ]]; then
    dialog --erase-on-exit --title "Confirm Remote Database Overwrite" --backtitle "Warning:" --yesno "This action will push the local database and overwrite a remote database. Are you sure?" 8 70
    confirm=$?
    if [ ! "$confirm" -eq 0 ]; then
      exit
    fi
  fi
  option=$(yq -o=json "${FILE}")
  wp option update wpsdb_settings "${option}" --format=json --url=${DDEV_PRIMARY_URL}
  wp plugin is-installed wp-sync-db-cli --url=${DDEV_PRIMARY_URL} &>/dev/null || composer require wp-sync-db/wp-sync-db-cli:dev-master --dev
  wp plugin is-active wp-sync-db-cli --url=${DDEV_PRIMARY_URL} &>/dev/null || wp plugin activate wp-sync-db-cli --url=${DDEV_PRIMARY_URL}
  if [ -z "$(grep situation/wp-sync-db-media-files composer.json)" ]; then
    composer remove wp-sync-db/wp-sync-db-media-files &> /dev/null
    composer require situation/wp-sync-db-media-files:dev-master -o &> /dev/null
    composer update situation/backstage &> /dev/null
  fi
  migrationName=$(yq '.profiles[0].name' "${FILE}")
  echo "Running Migration: ${migrationName}"
  wp wpsdb migrate 1 --url=${DDEV_PRIMARY_URL}
  if [[ "${direction}" = "pull" ]]; then
    wp plugin deactivate wp-rocket --url=${DDEV_PRIMARY_URL} &> /dev/null || true
    wp plugin deactivate redis-cache --url=${DDEV_PRIMARY_URL} &> /dev/null || true
    git restore --staged wp-config.php &> /dev/null || true
    git restore wp-config.php &> /dev/null || true
  fi
else
  echo "Migration ${1} not found."
  echo "Delete existing migrations in the CMS, set up the new one, and run ddev export-migration."
fi
