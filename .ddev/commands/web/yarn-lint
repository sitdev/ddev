#!/bin/bash

## Description: Run the yarn/webpack/gulp build.

# currentDirectory
# themesDirectory
# pluginsDirectory
# childThemes
# SITE_NAME
# SITE_TITLE
# NODE_VER

export scriptRoot=$(cd "${BASH_SOURCE%/*}" && pwd)
source $scriptRoot/.utilities
addGitHook() {
  if [ -d .git ]; then
    if [ ! -f .git/hooks/pre-commit ]; then
      mkdir -p .git/hooks
      touch .git/hooks/pre-commit
      chmod +x .git/hooks/pre-commit
    fi
    cat <<EOT >.git/hooks/pre-commit
#!/bin/bash

list=\$(git diff --cached --name-only --diff-filter=ACM)
if [[ "\$list" == *".scss"* ]] || [[ "\$list" == *".js"* ]]; then
  if [[ ! -z "\$(which ddev)" ]] && ddev exec pwd &> /dev/null; then
    echo "Applying formatting..."
    ddev yarn-lint &> /dev/null
    ddev mutagen sync
    for fname in \$list; do
        git add -A "\${fname}"
    done
  fi
fi
EOT
  fi
}
addWebpackScripts() {
  if [[ $(jq '.devDependencies.terser | length' package.json) = 0 ]]; then
    echo "Adding lint scripts..."
    yarn add --dev --exact prettier terser
  fi
  terser='find $npm_package_theme_directory/assets/scripts -name \"*.js\" | while read fname; do terser \"$fname\" --format comments=all,keep_numbers=true,ecma=2018 --output \"$fname\"; sed -i \"s/\\*\\//&\\n/\" \"$fname\"; sed -i \"/^$/d\" \"$fname\"; done'
  prettierJS='prettier --print-width 100 --trailing-comma none --single-quote true --write $npm_package_theme_directory/assets/scripts/{*.js,**/*.js}'
  prettierScss='prettier --print-width 120 --single-quote true --write $npm_package_theme_directory/assets/styles/'
  cleanupScss="replace '{\\\n*\\\s*}' '{}' \$npm_package_theme_directory/assets/styles/ -r --include='*.scss'"
  lint='eslint --config ~/config/eslint.json --fix --ext .js $npm_package_theme_directory/assets/scripts'
  jq --indent 4 ".scripts.terserJS = \"${terser}\" | .scripts.prettierJS = \"${prettierJS}\" | .scripts.prettierSCSS = \"${prettierScss}; ${cleanupScss}\" | .scripts.lint = \"${lint}\"" package.json >package.json.tmp && mv package.json.tmp package.json
}
addBowerScripts() {
  if [[ $(jq '.devDependencies.terser | length' package.json) = 0 ]]; then
    echo "Adding lint scripts..."
    yarn add --dev --exact prettier terser jscs
  fi
  if [ -f .jscsrc ]; then
    newjscs_data=$(cat ~/config/jscsrc.json)
    current_data=$(cat .jscsrc)
    merged_data=$(echo $current_data | jq --argjson new_data "$newjscs_data" '. += $new_data')
    echo $merged_data | jq . --indent 4 >~/config/.jscsrc
  fi
  terser='find ./assets/scripts -name \"*.js\" | while read fname; do terser \"$fname\" --format comments=all,keep_numbers=true,ecma=5 --output \"$fname\"; sed -i \"s/\\*\\//&\\n/\" \"$fname\"; sed -i \"/^$/d\" \"$fname\"; done'
  prettierJS='prettier --print-width 100 --single-quote true --write ./assets/scripts/{*.js,**/*.js}'
  prettierScss='prettier --print-width 120 --single-quote true --write ./assets/styles/{*.scss,**/*.scss}'
  cleanupScss="replace '{\\\n*\\\s*}' '{}' ./assets/styles/ -r --include='*.scss'"
  lint='find ./assets/scripts -type d | while read dname; do jscs --config ~/config/.jscsrc --fix \"$dname\"; done'
  jq --indent 4 ".scripts.terserJS = \"${terser}\" | .scripts.prettierJS = \"${prettierJS}\" | .scripts.prettierSCSS = \"${prettierScss}; ${cleanupScss}\" | .scripts.lint = \"${lint}\"" package.json >package.json.tmp && mv package.json.tmp package.json
}

for childThemeDir in $childThemes; do
  cd $childThemeDir
  if [ -f .jshintrc ]; then
    replace '"esnext": true,' '"esversion": 11,' .jshintrc --silent
  fi
done

for buildDir in $buildDirs; do
  cd ${buildDir}
  if [ -f package.json ]; then
    if [ -f webpack.config.js ]; then
      addWebpackScripts
      yarn terserJS
      yarn prettierJS
      yarn lint
      yarn prettierSCSS
    fi
    if [ -f bower.json ]; then
      addBowerScripts
      yarn terserJS
      yarn prettierJS
      yarn lint
      yarn prettierSCSS
    fi
  fi
done

cd "${currentDirectory}"
addGitHook
