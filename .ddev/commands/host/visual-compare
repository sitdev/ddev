#!/usr/bin/env bash

## Description: Update composer dependencies and rebuild yarn cache if needed.

source .conf/.env
baseDir="$(pwd)"
targetDir=.conf/migrations/compare
fname='\$fname'

ddev ssh -- <<EOF
[ -s ~/.nvm/nvm.sh ] && /bin/bash ~/.nvm/nvm.sh || true
mkdir -p $targetDir
cd $targetDir
cat <<EOT >package.json
{
    "name": "visual-compare",
    "version": "1.0.0",
    "license": "MIT",
    "scripts": {
        "build-sitemap": "npx sitemap-generator-cli -vr ${DDEV_PRIMARY_URL}",
        "pretty-html": "find html -name \"*.html\" | while read fname; do html \"$fname\"; done"
    },
    "devDependencies": {
        "html-cli": "^1.0.0"
    }
}
EOT
nvm install 20 >/dev/null 2>&1 || true
nvm use 20 >/dev/null 2>&1 || true
yarn
if [ ! -f sitemap.xml ]; then
  yarn build-sitemap
fi
if [ ! -f local-domain.txt ]; then
  echo "${DDEV_PRIMARY_URL}" > local-domain.txt
fi
grep -o '<loc>.*</loc>' sitemap.xml | sed 's#<loc>\(.*\)</loc>#\1#' > sitemap.txt
replace "${DDEV_PRIMARY_URL}" "" sitemap.txt --silent
sed -i '/\.pdf$/d' sitemap.txt
nvm use $NODE_VER >/dev/null 2>&1 || true
EOF
ddev mutagen sync
cd $targetDir
localDomain=$(cat local-domain.txt)
[ -f remote-domain.txt ] && remoteDomain=$(cat remote-domain.txt) || true
read -p "Enter full remote url: [${remoteDomain}] " newRemoteDomain
remoteDomain=${newRemoteDomain:-${remoteDomain}}
remoteDomain=$(echo "${remoteDomain}" | sed 's:/*$::')
echo "${remoteDomain}" >remote-domain.txt
if [ -z "${remoteDomain}" ]; then
  exit
fi
bareRemote=$(echo $remoteDomain | ddev replace "https://" "" -z --quiet)
bareLocal=$(echo $localDomain | ddev replace "https://" "" -z --quiet)
read -n 1 -p "Skip html downloading for comparison? Press Y to skip: " confirm
echo
if [[ ! $confirm =~ [yY] ]]; then
  rm -rf html
  while read path; do
    echo "Saving ${path}"
    mkdir -p "html/${bareLocal}${path}"
    mkdir -p "html/${bareRemote}${path}"
    wget -q --no-check-certificate "${localDomain}${path}" -O "html/${bareLocal}${path}/index.html"
    wget -q --no-check-certificate "${remoteDomain}${path}" -O "html/${bareRemote}${path}/index.html"
  done 3<&0 <sitemap.txt
  ddev mutagen sync
  ddev ssh -- <<EOF
[ -s ~/.nvm/nvm.sh ] && /bin/bash ~/.nvm/nvm.sh || true
cd $targetDir
nvm install 12 >/dev/null 2>&1 || true
nvm use 12 >/dev/null 2>&1 || true
replace "${bareLocal}" "${bareRemote}" html -r --quiet >/dev/null 2>&1
echo "Formatting html..."
yarn pretty-html >/dev/null 2>&1
nvm use $NODE_VER >/dev/null 2>&1 || true
EOF
  ddev mutagen sync
  echo "Creating git repo..."
  mkdir -p html/repo
  cp -r html/$bareRemote/* html/repo/
  (cd html/repo && git init . && git add -A . && git commit -am "Remote html" && rm -rf ./*) >/dev/null 2>&1
  cp -r html/$bareLocal/* html/repo/
  (cd html/repo && git add -A .) >/dev/null 2>&1
  echo
  echo "Git repo added here:"
  (cd html/repo && pwd)
  printf "\nUse git diff to view the differences between the staged changes from local and the commit created from the remote version.\n\n"
fi
while read path; do
  echo "Testing: ${path}"
  read -n 1 -p "(q to quit, enter to continue) " input </dev/tty
  echo
  if [[ $input =~ ^[Qq]$ ]]; then
    exit
  fi
  open "${localDomain}${path}"
  open "${remoteDomain}${path}"
done <sitemap.txt
